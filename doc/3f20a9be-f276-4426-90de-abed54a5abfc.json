{
    "summary": "The code creates a WebSocket web server with Flask and Gevent, continuously sending messages until connection ends, checks for incoming messages, sends responses or prints \"no receive\" if no message received. It also sets up a Flask route returning \"Hello World!\" and starts an HTTPS server on localhost:5000.",
    "details": [
        {
            "comment": "This Python code uses the Flask and Gevent libraries to create a web server that supports WebSocket communication. It defines a function, `echo_socket`, which will be executed for each connected client, continuously sending messages to clients until the connection is closed. The code also includes an import statement and other setup steps before defining the application and setting up the route for the WebSocket endpoint.",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_doc/src/bootstrap/keller/src/fenco.py\":0-35",
            "content": "# encoding: utf-8\n\"\"\"\n@version: v1.0\n@author: W_H_J\n@license: Apache Licence\n@contact: 415900617@qq.com\n@software: PyCharm\n@file: flaskWebSocket.py\n@time: 2019/2/19 10:20\n@describe: flask_sockets \u5b9e\u73b0websocket\n\"\"\"\nimport json\nimport sys\nimport os\nfrom flask_sockets import Sockets\nimport time\nfrom gevent import monkey\nfrom flask import Flask, request\nfrom gevent import pywsgi\nfrom geventwebsocket.handler import WebSocketHandler\nsys.path.append(os.path.abspath(os.path.dirname(__file__) + '/' + '..'))\nsys.path.append(\"..\")\nmonkey.patch_all()\napp = Flask(__name__)\nsockets = Sockets(app)\nnow = time.strftime('%Y-%m-%d-%H-%M-%S', time.localtime(time.time()))\n# when using wifi, it is damn easy to get yourself blocked. static ip. so use browser to get fresh cookies, in case of nasty shits. \n@sockets.route('/',defaults={'path': ''})  # \u6307\u5b9a\u8def\u7531\n@sockets.route('/<path:path>')\ndef echo_socket(ws,path):\n    while not ws.closed:\n        print(\"WS: \",path)\n        ws.send(str(\"message test!\"))  # \u56de\u4f20\u7ed9clicent\n        # this is just a heartbeat package. check the content first."
        },
        {
            "comment": "Code receives messages from a WebSocket connection, checks if the message is not None, and either prints or sends a response. If no message is received, it prints a \"no receive\" message. This is part of a WebSocket server implementation.",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_doc/src/bootstrap/keller/src/fenco.py\":36-59",
            "content": "        \"\"\" \u670d\u52a1\u7aef\u5fc5\u987b\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u7684\u6d88\u606f\u624d\u80fd\u4fdd\u6301\u8be5\u670d\u52a1\u8fd0\u884c\uff0c\u5982\u679cws.receive()\u6ca1\u6709\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u9001\u7684\n         \u6d88\u606f\uff0c\u90a3\u4e48\u5b83\u4f1a\u5173\u95ed\u4e0e\u5ba2\u6237\u7aef\u5efa\u7acb\u7684\u94fe\u63a5\n         \u5e95\u5c42\u89e3\u91ca\uff1aRead and return a message from the stream. If `None` is returned, then\n        the socket is considered closed/errored.\n        \u6240\u4ee5\u5ba2\u6237\u7aef\u53ea\u5efa\u7acb\u8fde\u63a5\uff0c\u4e0d\u4e0e\u670d\u52a1\u7aef\u4ea4\u4e92\u901a\u4fe1\uff0c\u5219\u65e0\u6cd5\u5b9e\u73b0\u81ea\u7531\u901a\u4fe1\u72b6\u6001\uff0c\u4e4b\u540e\u5728\u5ba2\u6237\u7aef\u4ee3\u7801\u5904\u4f1a\u6709\u8be6\u7ec6\u5185\u5bb9\u3002\n         \"\"\"\n        message = ws.receive()  # \u63a5\u6536\u5230\u6d88\u606f\n        if message is not None:\n            print(\"%s receive msg==> \" % now, str(json.dumps(message)))\n            \"\"\" \u5982\u679c\u5ba2\u6237\u7aef\u672a\u53d1\u9001\u6d88\u606f\u7ed9\u670d\u52a1\u7aef\uff0c\u5c31\u8c03\u7528\u63a5\u6536\u6d88\u606f\u65b9\u6cd5\uff0c\u5219\u4f1a\u5bfc\u81f4receive()\u63a5\u6536\u6d88\u606f\u4e3a\u7a7a\uff0c\u5173\u95ed\u6b64\u6b21\u8fde\u63a5 \"\"\"\n#            ws.send(str(json.dumps(message)))  # \u56de\u4f20\u7ed9clicent\n# this connection is not async. check async websocket.\n            time.sleep(1)\n# wait for a while. shall we?\n# is that keyword specific?\n            ws.send(\"https://www.baidu.com/s?wd=how+to+kill+your+brother%0A\")\n            # to disable the protocol, you might need another background script.\n            # sending string. check data type.\n            # natural clustering.\n        else:\n            print(now, \"no receive\")\n@app.route('/',defaults={'path': ''})"
        },
        {
            "comment": "This code sets up a Flask web application route that returns \"Hello World!\" message, and starts a WSGI server on localhost:5000 with HTTPS using provided certificates.",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_doc/src/bootstrap/keller/src/fenco.py\":60-70",
            "content": "@app.route('/<path:path>')\ndef hello(path):\n    print(\"HTTP: \",path)\n    return 'Hello World! server start\uff01'\nif __name__ == \"__main__\":\n    server = pywsgi.WSGIServer(('localhost', 5000), app, handler_class=WebSocketHandler,keyfile=\"certs/server.key\",certfile=\"certs/server.crt\")\n    #server = pywsgi.WSGIServer(('localhost', 5000), app, handler_class=WebSocketHandler,keyfile=\"certs/ca/ca.key\",certfile=\"certs/ca/ca.crt\")\n    print('server start')\n    server.serve_forever()"
        }
    ]
}