{
    "summary": "Code reads user input to select between case-sensitive or insensitive search, then takes a list of shredded keywords and allows the user to query. It returns a list of packages that contain all the keywords entered by the user in either lowercase or uppercase form based on the selected mode (normal/set). The code handles incorrect inputs gracefully, allowing for multiple attempts until a valid input is provided.",
    "details": [
        {
            "comment": "Code reads user input to select between case-sensitive or insensitive search, then takes a list of shredded keywords and allows the user to query. It returns a list of packages that contain all the keywords entered by the user in either lowercase or uppercase form based on the selected mode (normal/set). The code handles incorrect inputs gracefully, allowing for multiple attempts until a valid input is provided.",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_doc/src/bootstrap/legacy/concentration/new_toys/pypi_indexer.py\":0-36",
            "content": "from getFromDill import returnXList\ndef getlower(a, b):\n    return [x for x in a if b.lower() in x.lower()]\ndef juicy(a, b):\n    return [x for x in a if set(b.lower()).issubset(set(x.lower()))]\ndef positive(a, x, c):\n    if c:\n        return getlower(a, x)\n    else:\n        return juicy(a, x)\nr = returnXList(\"shredded_keywords_pypi\")\nwhile True:\n    try:\n        c = input(\"mode: N/S - normal/set\\n\")\n        assert type(c) == str and c in [\"N\", \"S\"]\n        if c == \"N\":\n            c = False\n            break\n        c = True\n        break\n    except Exception as err:\n        print(\"wrong mode!\")\n        continue\na = input(\"query:\\n\")\nfor x in r.keys():\n    i = positive(r[x], a, c)\n    if i != []:\n        print(\">>>PKGNAME<<< \"+x)\n        # print(str(r)[:100])  # still working."
        }
    ]
}