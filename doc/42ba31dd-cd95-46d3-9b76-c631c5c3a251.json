{
    "summary": "This code defines a config object with properties for welcome, addon, and cors. It sets up getter and setter functions to store and retrieve values from app storage, including whitelist, credentials, origin, headers, methods, last update timestamp, extension state, and allowed HTTP methods.",
    "details": [
        {
            "comment": "The code defines a config object with properties for welcome, addon, and cors. The welcome property includes lastupdate getter and setter methods to store and retrieve the last update timestamp from app storage. The addon property initializes a Map, sets URLs, test page URL, and OPTIONS based on browser type. It also has state getter/setter methods for storing and retrieving the extension's state from app storage. The cors property includes setters for origin, methods, and headers, which store these values in app storage using the app.storage.write method.",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_doc/src/bootstrap/keller/src/ced/lib/config.js\":0-23",
            "content": "var config = {};\nconfig.welcome = {\n  set lastupdate (val) {app.storage.write(\"lastupdate\", val)},\n  get lastupdate () {return app.storage.read(\"lastupdate\") !== undefined ? app.storage.read(\"lastupdate\") : 0}\n};\nconfig.addon = {\n  \"MAP\": new Map(),\n  \"URLS\": {\"urls\": [\"http://*/*\", \"https://*/*\"]},\n  \"test\": {\"page\": \"https://webbrowsertools.com/test-cors/\"},\n  \"OPTIONS\": {\n    \"request\": navigator.userAgent.indexOf(\"Firefox\") !== -1 ? [\"blocking\", \"requestHeaders\"] : [\"blocking\", \"requestHeaders\", \"extraHeaders\"],\n    \"response\": navigator.userAgent.indexOf(\"Firefox\") !== -1 ? [\"blocking\", \"responseHeaders\"] : [\"blocking\", \"responseHeaders\", \"extraHeaders\"]\n  },\n  /*  */\n  set state (val) {app.storage.write(\"state\", val)},\n  get state () {return app.storage.read(\"state\") !== undefined  ? app.storage.read(\"state\") : \"OFF\"}\n};\nconfig.cors = {\n  set origin (val) {app.storage.write(\"origin\", val)},\n  set methods (val) {app.storage.write(\"methods\", val)},\n  set headers (val) {app.storage.write(\"headers\", val)},"
        },
        {
            "comment": "This code sets up getter and setter functions for whitelist, credentials, origin, headers, and methods using the app.storage object to read and write data. If a value is found in storage, it returns it; otherwise, it returns a default value or false. The methods getter returns a comma-separated list of allowed HTTP methods as a default if none are stored.",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_doc/src/bootstrap/keller/src/ced/lib/config.js\":24-31",
            "content": "  set whitelist (val) {app.storage.write(\"whitelist\", val)},\n  set credentials (val) {app.storage.write(\"credentials\", val)},\n  get origin () {return app.storage.read(\"origin\") !== undefined ? app.storage.read(\"origin\") : false},\n  get headers () {return app.storage.read(\"headers\") !== undefined ? app.storage.read(\"headers\") : true},\n  get whitelist () {return app.storage.read(\"whitelist\") !== undefined ? app.storage.read(\"whitelist\") : []},\n  get credentials () {return app.storage.read(\"credentials\") !== undefined ? app.storage.read(\"credentials\") : false},\n  get methods () {return app.storage.read(\"methods\") !== undefined ? app.storage.read(\"methods\") : \"GET, PUT, POST, DELETE, HEAD, OPTIONS\"}\n};"
        }
    ]
}